// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package iso

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName          *string           `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name"`
	PackerBuilderType        *string           `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type"`
	PackerCoreVersion        *string           `mapstructure:"packer_core_version" cty:"packer_core_version" hcl:"packer_core_version"`
	PackerDebug              *bool             `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug"`
	PackerForce              *bool             `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force"`
	PackerOnError            *string           `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error"`
	PackerUserVars           map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables"`
	PackerSensitiveVars      []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables"`
	KubernetesName           *string           `mapstructure:"kubernetes_name" cty:"kubernetes_name" hcl:"kubernetes_name"`
	KubernetesNamespace      *string           `mapstructure:"kubernetes_namespace" cty:"kubernetes_namespace" hcl:"kubernetes_namespace"`
	KubevirtOsPreference     *string           `mapstructure:"kubevirt_os_preference" cty:"kubevirt_os_preference" hcl:"kubevirt_os_preference"`
	VirtualMachineDiskSpace  *string           `mapstructure:"vm_disk_space" cty:"vm_disk_space" hcl:"vm_disk_space"`
	SSHPort                  *int              `mapstructure:"ssh_port" cty:"ssh_port" hcl:"ssh_port"`
	WinRMPort                *int              `mapstructure:"winrm_port" cty:"winrm_port" hcl:"winrm_port"`
	SourceS3Url              *string           `mapstructure:"source_s3_url" cty:"source_s3_url" hcl:"source_s3_url"`
	SourceAWSAccessKeyId     *string           `mapstructure:"source_aws_access_key_id" cty:"source_aws_access_key_id" hcl:"source_aws_access_key_id"`
	SourceAWSSecretAccessKey *string           `mapstructure:"source_aws_secret_access_key" cty:"source_aws_secret_access_key" hcl:"source_aws_secret_access_key"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"packer_build_name":            &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"packer_builder_type":          &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"packer_core_version":          &hcldec.AttrSpec{Name: "packer_core_version", Type: cty.String, Required: false},
		"packer_debug":                 &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"packer_force":                 &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"packer_on_error":              &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"packer_user_variables":        &hcldec.AttrSpec{Name: "packer_user_variables", Type: cty.Map(cty.String), Required: false},
		"packer_sensitive_variables":   &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"kubernetes_name":              &hcldec.AttrSpec{Name: "kubernetes_name", Type: cty.String, Required: false},
		"kubernetes_namespace":         &hcldec.AttrSpec{Name: "kubernetes_namespace", Type: cty.String, Required: false},
		"kubevirt_os_preference":       &hcldec.AttrSpec{Name: "kubevirt_os_preference", Type: cty.String, Required: false},
		"vm_disk_space":                &hcldec.AttrSpec{Name: "vm_disk_space", Type: cty.String, Required: false},
		"ssh_port":                     &hcldec.AttrSpec{Name: "ssh_port", Type: cty.Number, Required: false},
		"winrm_port":                   &hcldec.AttrSpec{Name: "winrm_port", Type: cty.Number, Required: false},
		"source_s3_url":                &hcldec.AttrSpec{Name: "source_s3_url", Type: cty.String, Required: false},
		"source_aws_access_key_id":     &hcldec.AttrSpec{Name: "source_aws_access_key_id", Type: cty.String, Required: false},
		"source_aws_secret_access_key": &hcldec.AttrSpec{Name: "source_aws_secret_access_key", Type: cty.String, Required: false},
	}
	return s
}
